name: "‚ö° EnigMano Instance Deployment"

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        description: "Instance number to deploy (e.g., 1, 2, 3...)"
        required: true
        default: "1"

jobs:
  deploy-enigmano:
    name: "üöÄ Deploy EnigMano Instance ${{ github.event.inputs.INSTANCE }}"
    runs-on: windows-latest

    env:
      INSTANCE_ID: ${{ github.event.inputs.INSTANCE }}
      SECRET_SHAHZAIB: ${{ secrets.SECRET_SHAHZAIB }}
      NGROK_SHAHZAIB: ${{ secrets.NGROK_SHAHZAIB }}
      REPO: ${{ github.repository }}
      WORKFLOW_FILE: "enigmano.yml"
      DEPLOYMENT_ID: ${{ github.run_id }}

    steps:
      - name: üìå Deployment Parameters
        shell: pwsh
        run: |
          $prevInstance = [int]$env:INSTANCE_ID - 1
          Write-Host "==============================================="
          Write-Host "üîπ EnigMano Instance     : $env:INSTANCE_ID"
          Write-Host "üî¢ Previous Instance     : $prevInstance"
          Write-Host "üì¶ GitHub Repository     : $env:REPO"
          Write-Host "üîÅ Deployment Workflow   : $env:WORKFLOW_FILE"
          Write-Host "üÜî Deployment ID         : $env:DEPLOYMENT_ID"
          Write-Host "==============================================="

      - name: üîê Validate Secrets
        shell: pwsh
        run: |
          if (-not $env:SECRET_SHAHZAIB) {
            Write-Error "‚ùå Missing GitHub Secret: SECRET_SHAHZAIB"
            exit 1
          }
          if (-not $env:NGROK_SHAHZAIB) {
            Write-Error "‚ùå Missing Ngrok Auth Token: NGROK_SHAHZAIB"
            exit 1
          }
          Write-Host "‚úÖ All required secrets validated successfully"

      - name: üì¶ Install Software via Chocolatey (Brave, WinRAR, Notepad++)
        shell: pwsh
        run: |
          Write-Host "Installing Chocolatey and apps..." -ForegroundColor Green
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

          choco --version

          # Install apps (idempotent)
          choco install brave -y --no-progress || Write-Host "Brave install step ended (possibly already installed)."
          choco install winrar -y --no-progress || Write-Host "WinRAR install step ended (possibly already installed)."
          choco install notepadplusplus -y --no-progress || Write-Host "Notepad++ install step ended (possibly already installed)."

      - name: üß© Force-install uBlock Origin for Brave
        shell: pwsh
        run: |
          Write-Host "Configuring policy to force-install uBlock Origin in Brave..." -ForegroundColor Green
          $policyPath = "HKLM:\Software\Policies\BraveSoftware\Brave\ExtensionInstallForcelist"
          New-Item -Path $policyPath -Force | Out-Null
          New-ItemProperty -Path $policyPath -Name "1" -Value "cjpalhdlnbpafiamejdnhcphjbkeiagm;https://clients2.google.com/service/update2/crx" -PropertyType String -Force | Out-Null
          Write-Host "Policy set. uBlock Origin will be installed when Brave launches." -ForegroundColor Green

      - name: üì• Download EnigMano-instance.ps1
        shell: pwsh
        run: |
          $url = "https://raw.githubusercontent.com/Redveter/Debtgdt/refs/heads/main/EnigMano-instance.ps1"
          Write-Host "üåê Downloading EnigMano-instance.ps1..."
          Invoke-WebRequest -Uri $url -OutFile "EnigMano-instance.ps1" -UseBasicParsing
          if (!(Test-Path "./EnigMano-instance.ps1")) {
            Write-Error "‚ùå Failed to download EnigMano-instance.ps1"
            exit 1
          }
          Write-Host "‚úÖ EnigMano-instance.ps1 downloaded successfully"

      - name: ‚öîÔ∏è Execute EnigMano Instance Script
        shell: pwsh
        run: |
          Write-Host "üö¶ Initiating EnigMano-instance.ps1"
          powershell.exe -ExecutionPolicy Bypass -File ".\EnigMano-instance.ps1"


      - name: üí† Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "‚úÖ EnigMano Instance $env:INSTANCE_ID completed execution."
          Write-Host "üîã Powered by: SHAHZAIB-YT"
          Write-Host "üèÅ EnigMano deployment executed with tactical precision."
